{"version":3,"sources":["components/text.js","components/heading.js","header/header.js","components/textfield.js","components/btn.js","form/form.js","binary/binary.js","components/code.js","padded/padded.js","length/length.js","components/link.js","buffer/buffer.js","result/result.js","hash-calculator/bitwise-operations.js","hash-calculator/constant-T.js","hash-calculator/md5.js","md5.js","footer/footer.js","App.js","index.js"],"names":["Text","styled","p","props","color","code","Heading","h2","HeaderContainer","header","HeadText","Header","Textfield","textarea","Btn","button","outline","FormContainer","form","Label","Form","onSubmit","handleSubmit","rows","cols","placeholder","value","onChange","handleChange","type","Binary","data","join","Code","Padded","len","Length","Link","a","Buffer","buffer","A","B","C","D","href","List","ul","ListItem","withComponent","Output","Result","steps","map","item","idx","hash","bin_or","b","x1","x2","result","length","padStart","i","bin_and","bin_xor","current","bin_not","bin_sum_mod_32","sum","carry","Number","String","bin_sum","slice","T","F","x","y","z","not_x","G","not_z","H","I","Md5","useState","input","setInput","bin","setBin","padded","setPadded","fixedLength","setFixedLength","setBuffer","setResult","e","target","preventDefault","newBin","charCodeAt","toString","onClick","fixed","newState","str","procedure","block","reverse","parseInt","n","AA","BB","CC","DD","push","X","func","c","d","k","s","callback","bin_rotate_left","j","S","K","md5","Ftext","FooterContainer","footer","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcf5a292.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst Text = styled.p`\n  font-size: 2.5vmax;\n  font-weight: bold;\n  line-height: 1.5;\n  margin: 0 0 24px;\n  ${props => {\n    return props.color ?\n      \"color: \" + props.color + \";\" : \"color: #323232;\";\n  }}\n  ${props => {\n    return props.code ? \n      `word-break: break-all;\n       background: rgba(255, 255, 255, .2);\n       padding: .5em 1em;\n       margin-left: 24px;\n       border-left: 3px solid #00dd9a;\n     ` : \"text-indent: 24px;\";\n  }}\n  @media screen and  (min-width: 740px) {\n    font-size: 2.5vmin;\n  }\n  @media screen and  (min-width: 1440px) {\n    font-size: 2.25vmin;\n  }\n`;\n\nexport default Text;\n","import styled from \"@emotion/styled\";\n\nconst Heading = styled.h2`\n  font-size: 4vmax;\n  font-weight: bold;\n  line-height: 1.5;\n  color: #212121;\n  text-indent: 24px;\n  @media screen and  (min-width: 740px) {\n    font-size: 4vmin;\n  }\n  @media screen and  (min-width: 1440px) {\n    font-size: 3.75vmin;\n  }\n`;\n\nexport default Heading;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Text from \"./../components/text.js\";\nimport Heading from \"./../components/heading.js\";\n\nconst HeaderContainer = styled.header`\n  border-bottom: 4px solid #00dd9a;\n  padding: 1em;\n`;\n\nconst HeadText = styled(Text)`margin: 0 1em;`;\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <Heading>MD5 Algorithm</Heading>\n      <HeadText> demonstrating how message-degest algorithm works.</HeadText>\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","import styled from \"@emotion/styled\";\n\nconst Textfield = styled.textarea`\n  padding: .5em;\n  max-width: 100%;\n  border-radius: .5em;\n  outling: none;\n  font-size: 1em;\n  background: rgba(255, 255, 255, .6);\n  margin: 1em 2em;\n  \n  &:hover {\n    box-shadow: 5px 5px 5px rgba(0, 221, 154, .1),\n      5px -5px 5px rgba(0, 221, 154, .1),\n      -5px 5px 5px rgba(0, 221, 154, .1),\n      -5px -5px 5px rgba(0, 221, 154, .1);\n    border: 2px solid #00dd9a;\n    background: rgba(255, 255, 255, .65);\n  }\n  &:focus {\n    border: 2px solid #00dd9a;\n    background: rgba(255, 255, 255, .7);\n  }\n`;\n\nexport default Textfield;\n","import styled from \"@emotion/styled\";\n\nconst Btn = styled.button`\n  padding: .5em 1em;\n  font-size: 1em;\n  font-weight: bolder;\n  border: none;\n  border-radius: .5em;\n  text-transform: uppercase;\n  cursor: pointer;\n  margin: 1em;\n  transform: scale(.98);\n  ${props => {\n    return props.outline ? \n      `\n        background: transparent;\n        border: 3px solid #00dd9a;\n        color: #00dd9a;\n\n        &:hover {\n          background: rgba(255, 255, 255, .2);\n        }\n      ` : `\n        background: #00dd9a;\n        color: white;\n        &:hover {\n          background: #00cc8e;\n          border: 1px solid #00dd9a;\n        }\n      `;\n  }}\n  &:active {\n    transform: scale(1);\n  }\n`;\n\nexport default Btn;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Textfield from \"./../components/textfield.js\";\nimport Btn from \"./../components/btn.js\";\nimport Text from \"./../components/text.js\";\n\n\nconst FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nconst Label = styled(Text)`margin: 0;`;\n\nconst Form = (props) => {\n\n  return (\n    <FormContainer onSubmit={props.handleSubmit}>\n        <Label>your string: </Label>\n        <Textfield rows=\"10\" cols=\"80\" placeholder=\" \" value={props.value} onChange={props.handleChange}/>\n      <Btn type=\"submit\">Start</Btn>\n    </FormContainer>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nimport Text from \"./../components/text.js\";\n\nconst Binary = (props) => {\n\n  return (\n    <section>\n      <Text>in first step the input string have to convert to binary form</Text>\n      <Text>here is the binary form of \"{props.value}\"</Text>\n      <Text code>{props.data.join(\" \")}</Text>\n    </section>\n  );\n};\n\nexport default Binary;\n","import styled from \"@emotion/styled\";\n\nconst Code = styled.code`\n  background: rgba(255, 255, 255, .1);\n  border-bottom: 3px solid #00dd9a;\n  padding: .1em .3em;\n`;\n\nexport default Code;\n","import React from \"react\";\n\nimport Text from \"./../components/text.js\";\nimport Code from \"./../components/code.js\";\n\nconst Padded = (props) => {\n  return (\n    <section>\n      <Text>at second step the length of binary form of input must been congruent 448, modulo 512.</Text>\n      <Text>since the length of input is <Code>{props.len}</Code> we sould append one \"1\" and <Code>{448 - 1 - (props.len % 512)}</Code> zeroes to fix the padding.</Text>\n      <Text>the final result shoud like this: </Text>\n      <Text code>{props.data}</Text>\n    </section>\n  );\n}\n\nexport default Padded;\n","import React from \"react\";\n\nimport Text from \"./../components/text.js\";\n\nconst Length = (props) => {\n  return (\n    <section>\n      <Text>now we should append 64-bit representation of length of original input, to get a string length that is multiple of 512.</Text>\n      <Text>if the length of original input in binary form is less than 2^64 we should add zeroes to left of it to create 64-bit reperesentation.</Text>\n      <Text>and if the length of original input in binary form is greater than 2^64 we should use modulo to 2^64 instead of length.</Text>\n      <Text>finally we divide it to two 32-bit word and append them in reverse order. so the final string should be like this: </Text>\n      <Text code>{props.data}</Text>\n    </section>\n  );\n}\n\nexport default Length;\n","import styled from \"@emotion/styled\";\n\nconst Link = styled.a`\n  font-size: 1.2em;\n  text-decoration: none;\n  font-weight: bold;\n  color: #22ffbc;\n  transiton: .1s;\n\n  &:hover {\n    border-bottom: 3px solid #00dd9a;\n  }\n  &:visited {\n    color: #00dd9a;\n  }\n`;\n\nexport default Link;\n","import React from \"react\";\n\nimport Text from \"./../components/text.js\";\nimport Link from \"./../components/link.js\";\n\nconst Buffer = (props) => {\n  return (\n    <section>\n      <Text>after processing the procedure of adding padding to input string start the main algorithm by initializin some words.</Text>\n      <Text code>A : {props.buffer.A}</Text>\n      <Text code>B : {props.buffer.B}</Text>\n      <Text code>C : {props.buffer.C}</Text>\n      <Text code>D : {props.buffer.D}</Text>\n      <Text>also we define a <Link href=\"https://en.wikipedia.org/wiki/MD5#Pseudocode\">list</Link> of number with sine function.</Text>\n    </section>\n  );\n};\n\nexport default Buffer;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Text from \"./../components/text.js\";\nimport Code from \"./../components/code.js\";\n\nconst List = styled.ul`\n  margin: 0 2em;\n  list-style: none;\n`;\n\nconst ListItem = Text.withComponent(\"li\")\nconst Output= styled(Code)`\n  font-size: 1.4em;\n  padding: .5em 1em;\n  margin: 0 2em;\n`;\n\n\nconst Result = (props) => {\n  return (\n    <section>\n      <List>\n        {props.steps.map((item, idx) => {\n          return typeof(item) === \"number\" ? \n            <ListItem key={idx}>Block number {item}: </ListItem> :\n            <ListItem code key={idx}>A: {item[0]}, B: {item[1]}, C: {item[2]}, D: {item[3]}</ListItem>\n        })}\n      </List>\n      <Text>And the final result is: </Text>\n      <Output>{props.hash}</Output>\n    </section>\n  );\n}\n\nexport default Result;\n","const bin_or = (a, b) => {\n  let result = \"\",\n      x1, x2;\n  \n  // fix length of input numbers\n  if(a.length > b.length) {\n    x1 = a;\n    x2 = b.padStart(a.length, \"0\");\n  } else {\n    x1 = b;\n    x2 = a.padStart(b.length, \"0\");    \n  }\n  \n  for(let i = x1.length - 1; i >= 0; i--) {\n    let current = (x1[i] === \"0\" && x2[i] === \"0\") ? \"0\" : \"1\";\n    result = current + result;\n  }\n  \n  return result;\n}\n\nconst bin_and = (a, b) => {\n  let result = \"\",\n        x1, x2;\n\n  // fix length of input numbers\n  if(a.length > b.length) {\n    x1 = a;\n    x2 = b.padStart(a.length, \"0\");\n  } else {\n    x1 = b;\n    x2 = a.padStart(b.length, \"0\");    \n  }\n  \n  for(let i = x1.length - 1; i >= 0; i--) {\n    let current = (x1[i] === \"1\" && x2[i] === \"1\") ? \"1\" : \"0\";\n    result = current + result;\n  }\n  \n  return result;\n};\n\nconst bin_xor = (a, b) => {\n  let result = \"\",\n      x1, x2;\n  \n  // fix length of input numbers\n  if(a.length > b.length) {\n    x1 = a;\n    x2 = b.padStart(a.length, \"0\");\n  } else {\n    x1 = b;\n    x2 = a.padStart(b.length, \"0\");    \n  }\n  \n  for(let i = x1.length - 1; i >= 0; i--) {\n    let current = \"0\";\n    if((x1[i] === \"0\" && x2[i] === \"1\") || (x1[i] === \"1\" && x2[i] === \"0\")) {\n      current = \"1\";\n    }\n    result = current + result;\n  }\n  \n  return result;\n}\n\nconst bin_not = (a) => {\n  let result = \"\";\n  \n  for(let i = 0, len = a.length; i < len; i++) {\n    let current = a[i] === \"1\" ? \"0\" : \"1\";\n    result += current;\n  }\n  return result;\n}\n\nconst bin_rotate_left = (a, s) => {\n  return a.slice(s) + a.slice(0, s);\n}\n\nconst bin_sum = (a, b) => {\n  let sum = \"\",\n      carry = 0,\n      x1, x2;\n  \n  // fix length of input numbers\n  if(a.length > b.length) {\n    x1 = a;\n    x2 = b.padStart(a.length, \"0\");\n  } else {\n    x1 = b;\n    x2 = a.padStart(b.length, \"0\");    \n  }\n  \n  // add the numbers in x1, x2\n  for(let i = x1.length - 1; i >= 0; i--) {\n    let buffer = Number(x1[i]) + Number(x2[i]) + carry;\n    sum = String(buffer % 2) + sum;\n    carry = buffer >> 1;\n   }\n  \n  // process the remainder\n  while(carry >= 1) {\n    sum = String(carry % 2) + sum;\n    carry = carry >> 1;\n  }\n  \n  return sum;\n}\n\nconst bin_sum_mod_32 = (a, b) => {\n  return bin_sum(a, b).slice(-32);\n}\n\nexport {\n  bin_and,\n  bin_not,\n  bin_or,\n  bin_rotate_left,\n  bin_sum,\n  bin_sum_mod_32,\n  bin_xor\n};\n","// generate T[0...64]\n// T[i] = integer part of 4294967296 times of abs(sin(i))\n// converted to binary form\n\nconst T = [\n  '11010111011010101010010001111000',\n  '11101000110001111011011101010110',\n  '00100100001000000111000011011011',\n  '11000001101111011100111011101110',\n  '11110101011111000000111110101111',\n  '01000111100001111100011000101010',\n  '10101000001100000100011000010011',\n  '11111101010001101001010100000001',\n  '01101001100000001001100011011000',\n  '10001011010001001111011110101111',\n  '11111111111111110101101110110001',\n  '10001001010111001101011110111110',\n  '01101011100100000001000100100010',\n  '11111101100110000111000110010011',\n  '10100110011110010100001110001110',\n  '01001001101101000000100000100001',\n  '11110110000111100010010101100010',\n  '11000000010000001011001101000000',\n  '00100110010111100101101001010001',\n  '11101001101101101100011110101010',\n  '11010110001011110001000001011101',\n  '00000010010001000001010001010011',\n  '11011000101000011110011010000001',\n  '11100111110100111111101111001000',\n  '00100001111000011100110111100110',\n  '11000011001101110000011111010110',\n  '11110100110101010000110110000111',\n  '01000101010110100001010011101101',\n  '10101001111000111110100100000101',\n  '11111100111011111010001111111000',\n  '01100111011011110000001011011001',\n  '10001101001010100100110010001010',\n  '11111111111110100011100101000010',\n  '10000111011100011111011010000001',\n  '01101101100111010110000100100010',\n  '11111101111001010011100000001100',\n  '10100100101111101110101001000100',\n  '01001011110111101100111110101001',\n  '11110110101110110100101101100000',\n  '10111110101111111011110001110000',\n  '00101000100110110111111011000110',\n  '11101010101000010010011111111010',\n  '11010100111011110011000010000101',\n  '00000100100010000001110100000101',\n  '11011001110101001101000000111001',\n  '11100110110110111001100111100101',\n  '00011111101000100111110011111000',\n  '11000100101011000101011001100101',\n  '11110100001010010010001001000100',\n  '01000011001010101111111110010111',\n  '10101011100101000010001110100111',\n  '11111100100100111010000000111001',\n  '01100101010110110101100111000011',\n  '10001111000011001100110010010010',\n  '11111111111011111111010001111101',\n  '10000101100001000101110111010001',\n  '01101111101010000111111001001111',\n  '11111110001011001110011011100000',\n  '10100011000000010100001100010100',\n  '01001110000010000001000110100001',\n  '11110111010100110111111010000010',\n  '10111101001110101111001000110101',\n  '00101010110101111101001010111011',\n  '11101011100001101101001110010001'\n];\n\nexport { T };\n","import  {\n  bin_and,\n  bin_not,\n  bin_or,\n  bin_rotate_left,\n  bin_sum_mod_32,\n  bin_xor\n} from \"./bitwise-operations.js\";\nimport { T } from \"./constant-T.js\";\n\nconst F = (x, y, z) => {\n  // (x & y) | ((~x) & z);\n  let not_x = bin_not(x)\n  return bin_or(bin_and(x, y), bin_and(not_x, z));\n}\nconst G = (x, y, z) => {\n  // (x & z) | (y & (~z));\n  let not_z = bin_not(z);\n  return bin_or(bin_and(x, z), bin_and(y, not_z));\n}\nconst H = (x, y, z) => {\n  // x ^ y ^ z;\n  return bin_xor(bin_xor(x, y), z);\n}\nconst I = (x, y, z) =>{\n  // y ^ (x | (~z));\n  let not_z = bin_not(z);\n  return bin_xor(y, bin_or(x, not_z));\n}\n\nconst md5 = (str) => {\n  let result = \"\", procedure = [], b;\n\n  // converting to binary\n  for(let i = 0, len = str.length; i < len; i++) {\n    result += str.charCodeAt(i).toString(2).padStart(8, \"0\");\n  }\n  b = result.length;\n\n  // check padding\n  result += \"1\";\n  while(result.length % 512 !== 448) {\n    result += \"0\";\n  }\n\n  //\n  for(let i = 0, len = result.length >> 5; i < len; i++) {\n    let block = result.slice(i << 5, (i + 1) << 5),\n      reverse = \"\";\n    if(parseInt(block, 2) !== 0) {\n      for(let n = 3; n >= 0; n--) {\n        reverse += block.slice(n << 3, (n + 1) << 3);\n      }\n      result = result.slice(0, i << 5) + reverse + result.slice((i + 1) << 5);\n    }\n  }\n\n  // adding the length of result\n  b = b.toString(2);\n  if(b.length > 64) {\n    result += b.slice(-32);\n    result += b.slice(-64).slice(0, 32);\n  }else{\n    b = b.padStart(64, \"0\");\n    result += b.slice(32);\n    result += b.slice(0, 32);\n  }\n  \n  // initializing md buffer\n  let A = \"0x67452301\",\n    B = \"0xefcdab89\",\n    C = \"0x98badcfe\",\n    D = \"0x10325476\",\n    AA, BB, CC, DD;\n\n  A = parseInt(A, 16).toString(2);\n  B = parseInt(B, 16).toString(2);\n  C = parseInt(C, 16).toString(2);\n  D = parseInt(D, 16).toString(2);\n\n  // calculating hash\n  for(let i = 0, len = result.length / 512; i < len; i++ ){\n    procedure.push(i + 1);\n    // copy (A, B, C, D) to new varaibels\n    let X = [], block = result.slice(i << 9, (i + 1) << 9);\n\n    AA = A;\n    BB = B;\n    CC = C;\n    DD = D;\n\n    // helper function\n    const func = (a, b, c, d, k, s, i, callback) => {\n      //console.log({a, b, c, d, k, s, i, callback});\n      let buffer = callback(b, c, d);\n      buffer = bin_sum_mod_32(a, buffer);\n      buffer = bin_sum_mod_32(buffer, X[k]);\n      buffer = bin_sum_mod_32(buffer, T[i]);\n      buffer = bin_rotate_left(buffer, s);\n      buffer = bin_sum_mod_32(b, buffer);\n\n      return buffer;\n    };\n\n    // copy 16 word to X-array\n    for(let j = 0; j < 512 / 32; j++) {\n      let item = block.slice(j * 32, (j + 1) * 32);\n\n      X[j] = item;\n    }\n\n    let S = [\n      7, 12, 17, 22,\n      5, 9, 14, 20,\n      4, 11, 16 ,23,\n      6, 10, 15, 21\n    ], callback, K;\n\n    for(let n = 0; n < 64; n++) {\n      procedure.push([parseInt(AA, 2), parseInt(BB, 2), parseInt(CC, 2), parseInt(DD, 2)]);\n      let s, k;\n\n      /*** declaring values depend on round number ***/\n      if(n === 0) {\n        //round 1\n        callback = F;\n      }else if(n === 16) {\n        //round 2\n        callback = G;\n        K = 1;\n      }else if(n === 32) {\n        //round 3\n        callback = H;\n        K = 5;\n      }else if(n === 48) {\n        //round 4\n        callback = I;\n        K = 0;\n      }\n      /*** *** ***/\n\n      if(callback === F) {\n        k = n;\n        s = S[n % 4]\n      }else if(callback === G) {\n        k = (K + (n % 16) * 5) % 16;\n        s = S[4 + (n % 4)];\n      }else if(callback === H) {\n        k = (K + (n % 16) * 3) % 16;\n        s = S[8 + (n % 4)];\n      }else if(callback === I) {\n        k = (K + (n % 16) * 7) % 16;\n        s = S[12 + (n % 4)];\n      }\n\n      AA = func(AA, BB ,CC, DD, k, s, n, callback);\n      [AA, BB, CC, DD] = [DD, AA, BB, CC];\n    }\n\n    A = bin_sum_mod_32(A, AA);\n    B = bin_sum_mod_32(B, BB);\n    C = bin_sum_mod_32(C, CC);\n    D = bin_sum_mod_32(D, DD);\n  }\n\n  A = parseInt(A, 2).toString(16).padStart(8, \"0\");\n  B = parseInt(B, 2).toString(16).padStart(8, \"0\");\n  C = parseInt(C, 2).toString(16).padStart(8, \"0\");\n  D = parseInt(D, 2).toString(16).padStart(8, \"0\");\n  \n  result = A + B + C + D;\n\n  for(let i = 0; i < 4; i++) {\n    let block = result.slice(i << 3, (i + 1) << 3),\n      reverse = \"\";\n\n      for(let n = 3; n >= 0; n--) {\n        reverse += block.slice(n << 1, (n + 1) << 1);\n      }\n\n      result = result.slice(0, i << 3) + reverse + result.slice((i + 1) << 3);\n  }\n\n  return {result, procedure};\n}\n\nexport { md5 };\n","import React, { useState } from \"react\";\n\nimport Form from \"./form/form.js\";\n\nimport Binary from \"./binary/binary.js\";\nimport Padded from \"./padded/padded.js\";\nimport Length from \"./length/length.js\";\nimport Buffer from \"./buffer/buffer.js\";\nimport Result from \"./result/result.js\";\n\nimport Btn from \"./components/btn.js\";\n\nimport { md5 } from \"./hash-calculator/md5.js\";\n\nconst Md5 = () => {\n  const [input, setInput] = useState(\"\"),\n    [bin, setBin] = useState(false),\n    [padded, setPadded] = useState({}),\n    [fixedLength, setFixedLength] = useState(\" \"),\n    [buffer, setBuffer] = useState(false),\n    [result, setResult] = useState(false);\n\n\n  // first step (submitting the form)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let newBin = [];\n\n    for(let i = 0, len = input.length; i < len; i++) {\n      newBin[i] = input.charCodeAt(i).toString(2).padStart(8, \"0\");\n    }\n\n    setBin(newBin);\n    setPadded({});\n    setFixedLength(\" \");\n    setBuffer(false);\n    setResult(false);\n  }\n\n  // event listener for adding padding\n  const step2 = () => {\n    let result = {length: bin.join(\"\").length}\n    result.data = bin.join(\"\");\n    result.data += \"1\";\n    while(result.data.length % 512 !== 448) {\n      result.data += \"0\";\n    }\n\n    setPadded(result);\n  }\n\n  // event listener to appending length\n  const step3 = () => {\n    let fixed = padded.data,\n      b = bin.join(\"\").length.toString(2);\n\n    if(b.length > 64) {\n      fixed += b.slice(-32);\n      fixed += b.slice(-64).slice(0, 32);\n    }else{\n      b = b.padStart(64, \"0\");\n      fixed += b.slice(32);\n      fixed += b.slice(0, 32);\n    }\n\n    setFixedLength(fixed);\n  }\n\n  // event listener for initializing buffer\n  const step4 = () => {\n    let newState = {};\n    newState.A = \"0x67452301 / 1100111010001010010001100000001\";\n    newState.B = \"0xefcdab89 / 11101111110011011010101110001001\";\n    newState.C = \"0x98badcfe / 10011000101110101101110011111110\";\n    newState.D = \"0x10325476 / 10011000101110101101110011111110\";\n\n    setBuffer(newState);\n  }\n\n  // calculating md5 hash\n  const step5 = () => {\n    let hash = md5(input);\n\n    setResult(hash);\n  }\n\n  return (\n    <main>\n      <Form\n        value={input}\n        handleChange={(e) => {setInput(e.target.value)}}\n        handleSubmit={handleSubmit}/>\n      {bin ? (\n        <>\n          <Binary data={bin} value={input} /> \n          <Btn onClick={step2} outline>Add Padding</Btn>\n        </>\n        ): null}\n      {padded.length >= 0 ? (\n        <>\n          <Padded len={padded.length} data={padded.data} /> \n          <Btn onClick={step3} outline>Append Length</Btn>\n        </>\n        ): null}\n      {fixedLength.length % 512 === 0 ? (\n        <>\n          <Length data={fixedLength} /> \n          <Btn onClick={step4} outline>Initialize Buffer</Btn>\n        </>\n        ): null}\n      {buffer ? (\n          <>\n            <Buffer buffer={buffer} />\n            <Btn onClick={step5} outline>Process</Btn>\n          </>\n        ): null}\n      {result ? <Result hash={result.result} steps={result.procedure} /> : null}\n    </main>\n  );\n}\n\nexport default Md5;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Link from \"./../components/link.js\";\nimport Text from \"./../components/text.js\";\n\nconst Ftext = styled(Text)`\n  margin: 0;\n`;\nconst FooterContainer = styled.footer`\n  border-top: 4px solid #00dd9a;\n  margin-top: 2vh;\n`;\n\nconst Footer = () => {\n  return (\n    <FooterContainer>\n      <Ftext>developed by <Link href=\"https://arash-1999.github.io\">spry_ps</Link></Ftext>\n      <Ftext>for more information and details of implemenation you can view <Link href=\"https://datatracker.ietf.org/doc/html/rfc1321\">rfc 1321</Link></Ftext>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nimport Header from \"./header/header.js\";\nimport Md5 from \"./md5.js\";\nimport Footer from \"./footer/footer.js\";\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Md5 />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}